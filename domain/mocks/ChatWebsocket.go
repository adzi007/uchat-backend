// Code generated by mockery v2.40.1. DO NOT EDIT.

package mocks

import (
	domain "adzi-clean-architecture/domain"

	mock "github.com/stretchr/testify/mock"

	websocket "github.com/gofiber/contrib/websocket"
)

// ChatWebsocket is an autogenerated mock type for the ChatWebsocket type
type ChatWebsocket struct {
	mock.Mock
}

// Broadcast provides a mock function with given fields: _a0, _a1
func (_m *ChatWebsocket) Broadcast(_a0 domain.ChatBubble, _a1 string) {
	_m.Called(_a0, _a1)
}

// HandleWsChatRoom provides a mock function with given fields:
func (_m *ChatWebsocket) HandleWsChatRoom() func(*websocket.Conn) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for HandleWsChatRoom")
	}

	var r0 func(*websocket.Conn)
	if rf, ok := ret.Get(0).(func() func(*websocket.Conn)); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(func(*websocket.Conn))
		}
	}

	return r0
}

// Join provides a mock function with given fields: _a0, _a1
func (_m *ChatWebsocket) Join(_a0 *websocket.Conn, _a1 string) {
	_m.Called(_a0, _a1)
}

// Leave provides a mock function with given fields: _a0
func (_m *ChatWebsocket) Leave(_a0 *websocket.Conn) {
	_m.Called(_a0)
}

// Run provides a mock function with given fields:
func (_m *ChatWebsocket) Run() {
	_m.Called()
}

// NewChatWebsocket creates a new instance of ChatWebsocket. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewChatWebsocket(t interface {
	mock.TestingT
	Cleanup(func())
}) *ChatWebsocket {
	mock := &ChatWebsocket{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
